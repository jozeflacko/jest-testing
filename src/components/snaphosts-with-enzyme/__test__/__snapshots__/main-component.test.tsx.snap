// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Main /> renders correctly  component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Main />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="hello"
        >
          
        </div>,
        <button
          onClick={[Function]}
        >
          Click
        </button>,
        <Child
          attrMsg="Ahoj"
          buttonLabel="Hello Jozef"
          onClicked={[Function]}
        />,
      ],
      "className": "main-component",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "",
          "className": "hello",
        },
        "ref": null,
        "rendered": "",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Click",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Click",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "attrMsg": "Ahoj",
          "buttonLabel": "Hello Jozef",
          "onClicked": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="hello"
          >
            
          </div>,
          <button
            onClick={[Function]}
          >
            Click
          </button>,
          <Child
            attrMsg="Ahoj"
            buttonLabel="Hello Jozef"
            onClicked={[Function]}
          />,
        ],
        "className": "main-component",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "hello",
          },
          "ref": null,
          "rendered": "",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Click",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Click",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "attrMsg": "Ahoj",
            "buttonLabel": "Hello Jozef",
            "onClicked": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
